apply plugin: 'com.android.application'
apply plugin: 'robolectric'
apply plugin: 'jacoco'

android {
    compileSdkVersion 20
    buildToolsVersion "20.0.0"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    defaultConfig {
        applicationId "fi.lbd.mobile"
        minSdkVersion 15
        targetSdkVersion 20
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            runProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        androidTest {
            setRoot('src/test')
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
    }
}


robolectric {
    include '**/*Test.class'
    maxHeapSize = "2048m"
}

jacoco {
    toolVersion = "0.7.1.201405082137"
}

def coverageSourceDirs = [
        'src/main/java',
        'src/gen'
]

dependencies {

    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile 'com.google.android.gms:play-services:6.1.11'
    compile 'com.squareup:otto:1.3.5'
    compile 'com.android.support:support-v13:21.0.0'

    compile (
            [group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.4.1'],
            [group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.4.1'],
            [group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.4.1']
    )

    compile group: 'com.google.guava', name: 'guava', version: '15.0'


    androidTestCompile 'org.hamcrest:hamcrest-integration:1.1'
    androidTestCompile 'org.hamcrest:hamcrest-core:1.1'
    androidTestCompile 'org.hamcrest:hamcrest-library:1.1'

    androidTestCompile('junit:junit:4.+') {
        exclude module: 'hamcrest-core'
    }
    androidTestCompile 'org.mockito:mockito-core:1.9.5'
    androidTestCompile 'org.robolectric:robolectric:2.3'
   // androidTestCompile('org.robolectric:robolectric:2.3') {
//        exclude module: 'classworlds'
//        exclude module: 'commons-logging'
//        exclude module: 'httpclient'
//        exclude module: 'maven-artifact'
//        exclude module: 'maven-artifact-manager'
//        exclude module: 'maven-error-diagnostics'
//        exclude module: 'maven-model'
//        exclude module: 'maven-project'
//        exclude module: 'maven-settings'
//        exclude module: 'plexus-container-default'
//        exclude module: 'plexus-interpolation'
//        exclude module: 'plexus-utils'
//        exclude module: 'support-v4'
//        exclude module: 'wagon-file'
//        exclude module: 'wagon-http-lightweight'
//        exclude module: 'wagon-provider-api'
    androidTestCompile 'com.squareup.assertj:assertj-android:1.0.0'
}


// Add JaCoCo test reporting to the test task
// http://chrisjenx.com/gradle-robolectric-jacoco-dagger/
task jacocoTestReport(type: JacocoReport, dependsOn: "testDebug") {
    group = "Reporting"
    description = "Generate Jacoco coverage reports after running tests."
    reports {
        xml.enabled = true
        html.enabled = true
    }

    // Class R is used, but usage will not be covered, so ignore this class from report
    classDirectories = fileTree(
            dir: './build/intermediates/classes/debug',
            excludes: ['**/R.class',
                       '**/R$*.class'
            ])
    sourceDirectories = files(coverageSourceDirs)
    executionData = files('build/jacoco/testDebug.exec')
}